#version 140

mat3
findTangentSpace (vec3 vEye, vec3 nEyeNormalized, vec2 tCoord)
{ 
	vec3 dp1 = dFdx (vEye);
	vec3 dp2 = dFdy (vEye);
	vec2 duv1 = dFdx (tCoord);
	vec2 duv2 = dFdy (tCoord);

	mat3 M = mat3(dp1, dp2, cross(dp1, dp2));
	mat3 inverseM = mat3(cross (M[1], M[2]), cross (M[2], M[0]), vec3(0.0));
	vec3 T = vec3(duv1.x, duv2.x, 0.0) * inverseM;
	vec3 B = vec3(duv1.y, duv2.y, 0.0) * inverseM;

	return mat3(normalize(T), normalize(B), nEyeNormalized);
}

